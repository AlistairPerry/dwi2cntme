#!/bin/bash

# All required resource statements start with "#PBS -l"
# These will be interpreted by the job submission system (PBS pro)

subj=$1
WORKDIR=$2

currdir=$(pwd)
scannum=$(basename $currdir)

mkdir -p $WORKDIR/Diff/$subj/preproc/${scannum}

rsync *rawdata* $WORKDIR/Diff/$subj/preproc/${scannum}

rsync *.json $WORKDIR/Diff/$subj/preproc/${scannum}

cd $WORKDIR/Diff/$subj/preproc/${scannum}


#Extract gradient table for MRtrix specs

mrinfo rawdataAP.mif -export_grad_mrtrix rawencoding.b -force

#mrconvert rawdata.nii.gz rawdata.mif -grad rawencoding.b -strides +1,2,3,4 -force -nthreads $ncpus

#cp rawdata.mif preproc 

#cd preproc

#Denoise the rawdata

dwidenoise rawdataAP.mif rawdataAP-dn.mif -force -nthreads $ncpus

#Re-convert to the correct stride

mrconvert rawdataAP-dn.mif rawdataAP-dnstr.mif -strides +1,2,3,4 -force -nthreads $ncpus
 
mrconvert rawdataAP-dnstr.mif  rawdataAP-dn.mif -strides +1,2,3,4 -force -nthreads $ncpus

rm rawdataAP-dnstr.mif

#Eddy and motion correction

dwipreproc -rpe_none -pe_dir AP -export_grad_mrtrix adjencoding.b rawdataAP-dn.mif eddycorr.mif -eddy_options " --repol " -nthreads $ncpus -tempdir . -nocleanup -force

#Construct the b0 mask for future processing 

mrconvert eddycorr.mif eddyb0.nii -coord 3 0 -force -nthreads $ncpus
bet2 eddyb0.nii eddyb0brain -m -f 0.15

#Bias correction

dwibiascorrect -mask eddyb0brain_mask.nii.gz -fsl eddycorr.mif biascorr.mif -force -nthreads $ncpus -tempdir .

mrconvert biascorr.mif biasb0.nii -coord 3 0 -force -nthreads $ncpus
bet2 biasb0.nii biasb0brain -m -f 0.15

#Generate tensor and fa images

#dwishellmath biascorr.mif mean meanshell.mif -force -nthreads $ncpus
dwi2tensor biascorr.mif dt.nii -mask biasb0brain_mask.nii.gz -force -nthreads $ncpus
tensor2metric dt.nii -fa fa.nii -force -nthreads $ncpus
