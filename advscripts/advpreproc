#!/bin/bash
# file: advpreproc
# usage: advpreproc subj workdir ismosaic ncpus fullreverseseq ismultiband

# note: for only with acquisitions with reverse sequnce - i.e. base subject directory must contain rawdataAP.mif and its reverse sequence rawdataPA.mif

subj=$1
WORKDIR=$2
ismosiac=$3
fullreverseseq=$4
ismultiband=$5

mkdir -p $WORKDIR/Diff/$subj/preproc 

rsync *rawdata* $WORKDIR/Diff/$subj/preproc

rsync T1.nii $WORKDIR/Diff/$subj/preproc

cd $WORKDIR/Diff/$subj/preproc

#Extract encoding

mrinfo rawdataAP.mif -export_grad_mrtrix rawencoding.b
mrinfo rawdataPA.mif -export_grad_mrtrix rawrevencoding.b

if [ $ismosaic==1 ];
then

	mrconvert rawdataAP.mif rawdataAP.nii -force -nthreads $ncpus

	nvols=$(fslnvols rawdataAP.nii)
	adjvols=$(expr $nvols - 1)

	fslroi rawdataAP.nii rawdataAPrem 1 $adjvols

	sed '1d' rawencoding.b > rawencodingrem.b
	mrconvert rawdataAPrem.nii.gz rawdataAPrem.mif -force -grad rawencodingrem.b -stride +1,2,3,4

	mv rawdataAPrem.mif rawdataAP.mif
fi

if [ $fullreverseseq==1 ];
then
	mrconvert rawdataPA.mif rawdataPA.nii -force -nthreads $ncpus
	fslroi rawdataPA.nii rawdataPArem 1 $adjvols
	sed '1d' rawrevencoding.b > rawrevencodingrem.b
        mrconvert rawdataPArem.nii.gz rawdataPArem.mif -force -grad rawrevencodingrem.b -stride +1,2,3,4
	mv rawdataPArem.mif rawdataPA.mif
else
	dwiextract rawdataPA.mif -bzero rawdataPArem.mif -force
	mv rawdataPArem.mif rawdataPA.mif
fi

#Denoise

dwidenoise rawdataAP.mif rawdataAPdn.mif -force -nthreads $ncpus
dwidenoise rawdataPA.mif rawdataPAdn.mif -force -nthreads $ncpus

mrconvert rawdataAPdn.mif rawdataAPdnstr.mif -stride +1,2,3,4 -force -nthreads $ncpus
mrconvert rawdataAPdnstr.mif  rawdataAPdn.mif  -force -nthreads $ncpus

mrconvert rawdataPAdn.mif rawdataPAdnstr.mif -stride +1,2,3,4 -force -nthreads $ncpus
mrconvert rawdataPAdnstr.mif  rawdataPAdn.mif -stride +1,2,3,4 -force -nthreads $ncpus

rm rawdataAPdnstr.mif
rm rawdataPAdnstr.mif 

#Generate a b0 base image for each phase-encoding direction

mrconvert rawdataAPdn.mif b0AP.mif -coord 3 0 -force -nthreads $ncpus
mrconvert rawdataPAdn.mif b0PA.mif -coord 3 0 -force -nthreads $ncpus

#Preprocessing steps including eddy correction & bias correction

dwiextract rawdataAPdn.mif APb0s.mif -bzero -force

if [ $ismultiband==1 ] && [ $fullrevsequence==0 ];
then

	#assuming multiband factor of 2
	${MRTRIX}/scripts/dwipreproc_mb -rpe_pair APb0s.mif  rawdataPAdn.mif -export_grad_mrtrix adjencoding.b AP rawdataAPdn.mif eddycorr.mif -nthreads $ncpus -verbose -force -tempdir .

elif [ $ismultiband==1 ] && [ $fullrevsequence==1 ],
then
	${MRTRIX}/scripts/dwipreproc_mb -rpe_all rawdataPAdn.mif -export_grad_mrtrix adjencoding.b AP rawdataAPdn.mif eddycorr.mif -nthreads $ncpus -verbose -force -tempdir .

else
	${MRTRIX}/scripts/dwipreproc_cust -rpe_pair APb0s.mif  rawdataPAdn.mif -export_grad_mrtrix adjencoding.b AP rawdataAPdn.mif eddycorr.mif -nthreads $ncpus -verbose -force -tempdir .
fi

dwiextract eddycorr.mif -bzero - | mrmath -axis 3 - mean eddymeanb0.nii -force
bet2 eddymeanb0.nii eddymeanb0bet -m -f 0.15

dwibiascorrect -mask eddymeanb0bet_mask.nii.gz -fsl eddycorr.mif biascorr.mif -nthreads $ncpus -force
dwishellmath biascorr.mif mean meanshell.mif

#Create tensor and FA images

dwiextract biascorr.mif -bzero - | mrmath -axis 3 - mean biasmeanb0.nii -force

bet2 biasmeanb0.nii biasmeanb0bet -f 0.15 -m 

dwi2tensor biascorr.mif dt.nii -mask biasmeanb0bet_mask.nii.gz -nthreads $ncpus -force

tensor2metric dt.nii -fa fa.nii -nthreads $ncpus -force
